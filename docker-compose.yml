version: '3.8'

services:
  # LSTM 모델 학습 서비스
  lstm-training:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lstm-training
    volumes:
      - ./:/app
    environment:
      - PYTHONUNBUFFERED=1
      - TRAIN_MODE=True
      - EPOCHS=100
      - LEARNING_RATE=0.001
      - BATCH_SIZE=32
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: python -m src.models.train
    networks:
      - mlops-network
    depends_on:
      - mlflow
    restart: "no"  # 작업 완료 후 재시작하지 않음
    
  # 모델 서빙 API
  model-serving:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: model-serving-api
    ports:
      - "8000:8000"
      - "8001:8001"  # Prometheus 메트릭용 포트
    volumes:
      - ./:/app
    environment:
      - MODEL_DIR=/app/models
      - MODEL_NAME=lstm_model
      - API_PORT=8000
      - METRICS_PORT=8001
      - PYTHONUNBUFFERED=1
    command: python -m src.serving.api
    networks:
      - mlops-network
    depends_on:
      - mlflow
    restart: unless-stopped
  
  # MLflow 추적 서버
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.4.1
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    command: mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow/mlflow.db --default-artifact-root /mlflow/artifacts
    networks:
      - mlops-network
    restart: unless-stopped
  
  # 모니터링 (Prometheus)
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/p.txt'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - mlops-network
    restart: unless-stopped

  # 대시보드 (Grafana)
  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - mlops-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  mlops-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: